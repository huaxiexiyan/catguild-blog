[{"permalink":"https://www.catguild.cn/posts/2023092802/","summary":"启动 非正常环境下启动 在docker环境下运行，并且没有jdk，只有jre环境，而且pid进程好为1，可以使用下发的方式启动。 # 1、进入容器 docker exec -it [container_id | container_name] bin/bash # 2、查询当前jre环境所在位置 which java # 3、下在arthas的编译压缩包 wget -O arthas.zip \u0026#34;https://arthas.aliyun.com/download/latest_version?mirror=aliyun\u0026#34; # 4、将压","title":"Arthas 简单使用"},{"permalink":"https://www.catguild.cn/posts/2023092801/","summary":"整体部署方案 代码仓库选择Github进行托管，并且基于Github Actions进行CI流程，只需要编写workflows配置文件即可。 部署涉及到中间件、java服务、flask服务、vue前端服务。 flask服务部署 CI：依赖Github","title":"容器化部署方案"},{"permalink":"https://www.catguild.cn/posts/2023091601/","summary":"安装 一般都选择在虚拟环境中安装，这里以pipenv为例。 pipenv install Flask 基本知识 URL书写规则 类型 说明 string （缺省值） 接受任何不包含斜杠的文本 int 接受正整数 float 接受正浮点数 path 类似 string ，但可以包含斜杠 uuid 接受 UUID字符串 例子 from markupsafe import escape @app.route(\u0026#39;/user/\u0026lt;username\u0026gt;\u0026#39;) def show_user_profile(username): # show the user profile for that user return f\u0026#39;User {escape(username)}\u0026#39; @app.route(\u0026#39;/post/\u0026lt;int:post_id\u0026gt;\u0026#39;)","title":"Flask初识"},{"permalink":"https://www.catguild.cn/posts/2023091504/","summary":"protobuf语法 文件格式 .proto 版本设定 # 可选proto2 ，主流一般都是用 proto3 syntax = \u0026#34;proto3\u0026#34;; 注释 单行 # 多行 /* */ 与java语言相关的语法 # 后续 protobuf 生成的java代码，是在同一源文件，还是多个源文件中 option java_multiple_files = true; # 指定 protobuf 生成的类 放在什么包下面 option java_package = \u0026#34;com.xx.xx\u0026#34;; # 指定 protobuf 生成","title":"gRPC"},{"permalink":"https://www.catguild.cn/posts/2023091505/","summary":"初认识 基本使用 1、添加基本依赖 2、 @EnableScheduling 注解开启定时任务 @Scheduled 注释标注定时任务方法 通过注册ScheduledAnnotationBeanPostProcessor来执行@Scheduled注释的处理。这可以手动完成，或者更方便地通过task:ann","title":"Spring Task定时任务"},{"permalink":"https://www.catguild.cn/posts/2023091506/","summary":"总览 方式 优点 缺点 @PostConstruct 注解 1、简单直观，只需要在方法上添加注解即可。2、集成度高，与Spring框架紧密结合，适用于需要与其他Spring功能一起使用的场景。 1、不太适合复杂的初始化逻辑，因为它没有提供很多的错误处理机制。2、无法捕获方法内部的","title":"SpringBoot初始化方法"},{"permalink":"https://www.catguild.cn/posts/2023091502/","summary":"snowflake 分布式id生成算法的有很多种，Twitter的雪花算法（SnowFlake）就是其中经典的一种。 SnowFlake算法的优点： 生成ID时不依赖于数据库，完全在内存生成，高性能高可用。 容量大，每秒可生成几百万ID。 SnowFlake算法在同","title":"雪花算法"},{"permalink":"https://www.catguild.cn/posts/2023091503/","summary":"实现方案 需求 前提条件： 1、id是一个整数 2、code码是整数或大写字母 实现需求 1、唯一性（必须保证） 2、id与code能相互解析转换 3、code长度适中 6-10 位 4、生成的code需要一定程度的保密（规律不能太明显，轻易解析出id来） 实现逻辑 代码","title":"邀请码实现方案"},{"permalink":"https://www.catguild.cn/posts/2020011501/","summary":"CDN 含义 内容分发网络（英语：Content Delivery Network或Content Distribution Network，缩写：CDN）是指一种透过互联网互相连接的电脑网络系统，利用最靠近每位用户的服务器，更快、更可靠地将音乐、图片、视频、应用程序及其他文件发送给用户，来","title":"内容分发网络CND"},{"permalink":"https://www.catguild.cn/draft/redis/readme/","summary":" ","title":""},{"permalink":"https://www.catguild.cn/test/markdown%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95/","summary":"这里是这篇文章的源文件： 测试各种样式的帖子哦 上面是分割线，看到了么？ 段内格式测试： 这里首先是紧接着的一段而不分行。然后是粗体和斜体，粗斜体，以及删除线和段内代码，最后就是注脚1。 下划线生成标题： 下划线标题1 下划线标题2 #Sharp标题1 ##","title":"markdown语法效果测试"},{"permalink":"https://www.catguild.cn/draft/python/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/","summary":"基本安装 1、到官网下载最新的版本 虚拟环境 1、安装 pip install pipenv 2、（选用）修改环境变量 该环境会让虚拟环境创建再当前项目下，否则会创建默认位置 PIPENV_VENV_IN_PROJECT=1 3、到项目目录下 pipenv install 该命令会创建虚拟环境目录，并生成 Pipfile 和Pipfile.lock 文件 4、安装依赖 pipenv install package_name 5、","title":"Python基本使用"},{"permalink":"https://www.catguild.cn/draft/redis/redis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/","summary":"为什么需要分布式锁 单机场景下用的都是本地锁，针对的仅仅是一个jvm进程所管理的资源。当单体应用部署了多份的时候，一个jvm进程中本地锁是无法影响到另一个jvm进程的本地锁的，这样是无法保证资源的独占的。所以分布式锁应运而生。 一个靠谱的分布式","title":"Redis分布式锁"},{"permalink":"https://www.catguild.cn/draft/redis/redis%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/","summary":"页面内容2","title":"Redis基础数据类型"},{"permalink":"https://www.catguild.cn/draft/redis/redis%E9%9D%A2%E8%AF%95%E9%A2%98/","summary":"1、Redis除了拿来做缓存","title":"Redis面试题"},{"permalink":"https://www.catguild.cn/page/about/","summary":"","title":"关于"},{"permalink":"https://www.catguild.cn/draft/python/%E7%88%AC%E8%99%AB/","summary":"爬虫框架 scrapy 1、创建新项目 scrapy startproject tutorial 2、创建爬虫文件 # 创建普通模版 scrapy genspider 爬虫名字 爬取的域名（不用协议头） # 创建 crawl spider 模版 scrapy genspider -t crawl 爬虫名字 爬取的域名（不用协议头） 3、启动爬虫 scrapy crawl 爬虫名字 项目文件结构 项目名字 项目名字 spiders文件夹（存储的是爬虫文件","title":"爬虫"},{"permalink":"https://www.catguild.cn/draft/python/%E7%BA%BF%E7%A8%8B%E4%B8%AD%E6%96%AD/","summary":"线程中断机制 LockSupport类 简介：用于创建锁和其他同步类的基本线程阻塞原语 该类与使用它的每个线程关联一个许可证（在Semaphore类的意义上）。如果许可证可用，将立即返回park，并在此过程中消费；否则可能会阻止。如果尚未提供许可","title":"线程中断"},{"permalink":"https://www.catguild.cn/page/links/","summary":"SoulChild随笔记","title":"友链"}]